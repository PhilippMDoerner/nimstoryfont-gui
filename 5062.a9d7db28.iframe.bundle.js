(self.webpackChunknimstoryfont_gui=self.webpackChunknimstoryfont_gui||[]).push([[5062],{"./src/app/_modules/formly_constants.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{aj:()=>FORMLY_CHILD_MODULE,d_:()=>FORMLY_MODULE});var ngx_formly_core=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),molecules=__webpack_require__("./src/app/design/molecules/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var formly_autocomplete_field_componentngResource=__webpack_require__("./src/app/design/molecules/formly-autocomplete-field/formly-autocomplete-field.component.scss?ngResource"),formly_autocomplete_field_componentngResource_default=__webpack_require__.n(formly_autocomplete_field_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),ReplaySubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),rxjs_operators=__webpack_require__("./src/utils/rxjs-operators.ts"),badge_component=__webpack_require__("./src/app/design/atoms/badge/badge.component.ts"),spinner_component=__webpack_require__("./src/app/design/atoms/spinner/spinner.component.ts");const NON_NORMAL_CHARACTER_REGEXP=/[^a-zA-Z0-9]/g,TWO_OR_MORE_WHITESPACE_REGEXP=/\s\s+/g;let FormlyAutocompleteFieldComponent=class FormlyAutocompleteFieldComponent extends ngx_formly_core.PU{constructor(){super(...arguments),this.destroy$=new Subject.B,this.randomId=crypto.randomUUID(),this.inputId=`autocomplete-${this.randomId}`,this.inputElement=(0,core.viewChild)("input"),this.inputElement$=(0,rxjs_interop.br)(this.inputElement).pipe((0,rxjs_operators.u5)()),this.customProps=this.props.additionalProperties,this.htmlBadgeClickEvents$=new Subject.B,this.inputValue="",this.htmlInputEvents$=this.inputElement$.pipe((0,switchMap.n)((input=>(0,fromEvent.R)(input.nativeElement,"input"))),(0,map.T)((event=>({event,inputValue:this.inputElement()?.nativeElement.value??""}))),(0,tap.M)((()=>this.formControl.markAsDirty()))),this.htmlBackspaceClearEvents$=this.inputElement$.pipe((0,switchMap.n)((input=>(0,fromEvent.R)(input.nativeElement,"keydown"))),(0,filter.p)((event=>"Backspace"===event.key)),(0,filter.p)((()=>""===this.inputElement()?.nativeElement.value)),(0,map.T)((()=>{})),(0,debounceTime.B)(100)),this.manualInputTrigger$=new Subject.B,this.manualInputEvents$=this.manualInputTrigger$.pipe((0,map.T)((manualValue=>({event:null,inputValue:manualValue})))),this.inputEvents$=(0,merge.h)(this.htmlInputEvents$,this.manualInputEvents$),this.inputClearSelectEvents$=this.inputEvents$.pipe((0,filter.p)((event=>0===event.inputValue.length)),(0,map.T)((()=>{})),(0,debounceTime.B)(100)),this.clearSelectEvents$=(0,merge.h)(this.inputClearSelectEvents$,this.htmlBadgeClickEvents$,this.htmlBackspaceClearEvents$).pipe((0,map.T)((()=>({sourceEvent:null,inputValue:"",selectedOption:void 0})))),this.isLoading$=new ReplaySubject.m(1),this.options$=this.htmlInputEvents$.pipe((0,debounceTime.B)(500),(0,tap.M)((()=>this.isLoading$.next(!0))),(0,switchMap.n)((()=>{const searchTerm=this.inputElement()?.nativeElement.value,cleanedTerm=searchTerm?.replaceAll(NON_NORMAL_CHARACTER_REGEXP," ").trim().replace(TWO_OR_MORE_WHITESPACE_REGEXP," ").trim();return cleanedTerm&&cleanedTerm.length>=1?this.customProps.loadOptions(cleanedTerm,this.props,this.formControl):(0,of.of)([])})),(0,tap.M)((()=>this.isLoading$.next(!1))),(0,shareReplay.t)(1))}onFocus(){this.inputElement()?.nativeElement.focus()}ngOnInit(){this.setupData(),this.setupBehavior()}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}setupBehavior(){this.inputEvents$.pipe((0,takeUntil.Q)(this.destroy$)).subscribe((event=>{this.inputValue=event.inputValue})),this.selectEvents$.pipe((0,takeUntil.Q)(this.destroy$)).subscribe((event=>{const newSelectedValue=event.selectedOption?.[this.customProps.optionValueProp];this.formControl.setValue(newSelectedValue)})),this.formControl.valueChanges.pipe((0,startWith.Z)(this.formControl.value),(0,distinctUntilChanged.F)(),(0,withLatestFrom.E)(this.selectedOption$,this.options$),(0,takeUntil.Q)(this.destroy$)).subscribe((([newFormValue,currentlySelectedOption,options])=>{const currentlySelectedValue=currentlySelectedOption?.[this.customProps.optionValueProp];if(newFormValue!==currentlySelectedValue){const formOption=options.find((opt=>opt[this.customProps.optionValueProp]===newFormValue));null!=formOption?this.manualInputTrigger$.next(formOption[this.customProps.optionLabelProp]):this.manualInputTrigger$.next(`${newFormValue}`)}}))}setupData(){this.customProps=this.props.additionalProperties;const selectFromInputEvents$=(0,combineLatest.z)({options:this.options$,inputEvent:this.inputEvents$}).pipe((0,map.T)((({options,inputEvent})=>{const selectedOption=options.find((option=>option[this.customProps.optionLabelProp]===inputEvent.inputValue));return{inputValue:inputEvent.inputValue,sourceEvent:inputEvent.event,selectedOption}})),(0,filter.p)((event=>null!=event.selectedOption)));this.selectEvents$=(0,merge.h)(selectFromInputEvents$,this.clearSelectEvents$),this.selectedOption$=(0,merge.h)(this.customProps.initialValue$??(0,of.of)(void 0),this.selectEvents$.pipe((0,map.T)((selectEvent=>selectEvent.selectedOption)),(0,shareReplay.t)(1))),this.selectedLabel$=this.selectedOption$.pipe((0,map.T)((option=>option?.[this.customProps.optionLabelProp])))}static{this.propDecorators={inputElement:[{type:core.ViewChild,args:["input",{isSignal:!0}]}]}}};FormlyAutocompleteFieldComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-formly-autocomplete-field",imports:[common.AsyncPipe,fesm2022_forms.X1,ngx_formly_core.qy,spinner_component.t,badge_component.n],template:'@let selectedOption = selectedOption$ | async;\n@let selectedLabel = selectedLabel$ | async;\n@let isLoading = (isLoading$ | async) === true;\n\n<div class="field" (click)="input.focus()">\n  <div class="field__input">\n    @if (selectedOption && selectedLabel) {\n      <app-badge\n        [kind]="\'SECONDARY\'"\n        [text]="selectedLabel"\n        [title]="\'Clear this option\'"\n        [icon]="\'times\'"\n        [clickable]="true"\n        (badgeClick)="htmlBadgeClickEvents$.next()"\n        (click)="$event.stopPropagation()"\n      />\n    }\n    <input\n      #input\n      [class.field__is-invalid]="showError"\n      [attr.aria-describedby]="id + \'-formly-validation-error\'"\n      [attr.aria-invalid]="showError"\n      class="field__autocomplete"\n      type="search"\n      name="autocomplete"\n      maxlength="100"\n      (blur)="formControl.markAsTouched()"\n      [value]="inputValue"\n      [disabled]="props.disabled"\n      [id]="inputId"\n      [attr.list]="\'options-\' + randomId"\n      [formlyAttributes]="field"\n      [placeholder]="\'Enter a search query\'"\n    />\n    <datalist [id]="\'options-\' + randomId">\n      @for (item of options$ | async; track item[customProps.optionKeyProp]) {\n        <option [value]="item[customProps.optionLabelProp]">\n          {{ item[customProps.optionLabelProp] }}\n        </option>\n      }\n    </datalist>\n\n    @if (isLoading) {\n      <app-spinner class="field__spinner" />\n    }\n  </div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[formly_autocomplete_field_componentngResource_default()]})],FormlyAutocompleteFieldComponent);var formly_datepicker_field_component=__webpack_require__("./src/app/design/organisms/formly-datepicker-field/formly-datepicker-field.component.ts"),formly_editor_field_component=__webpack_require__("./src/app/design/organisms/formly-editor-field/formly-editor-field.component.ts"),formly_select_disable_field_component=__webpack_require__("./src/app/design/organisms/formly-select-disable/formly-select-disable-field.component.ts"),validators=__webpack_require__("./src/app/_services/formly/validators.ts"),formly_typeahead_field_component=__webpack_require__("./src/app/design/molecules/formly-typeahead-field/formly-typeahead-field.component.ts");const FORMLY_CONFIG={types:[{name:"file",component:molecules.JS,wrappers:["form-field"]},{name:"text-editor",component:formly_editor_field_component.S},{name:"select-disable",component:formly_select_disable_field_component.D},{name:"datepicker",component:formly_datepicker_field_component.FE},{name:"autocomplete",component:FormlyAutocompleteFieldComponent},{name:"typeahead",component:formly_typeahead_field_component.o,wrappers:["form-field"]}],validationMessages:[validators.wh,validators.h9,validators.Ou,validators.Oy,validators.Nd,validators.zG,validators.d,validators.Dq,validators.k1,validators.tu],validators:[validators.EC,validators.yt,validators.N8,validators.lk,validators.cC,validators.jp,validators.Z5,validators.kO,validators.iR]},FORMLY_MODULE=ngx_formly_core.qy.forRoot(FORMLY_CONFIG),FORMLY_CHILD_MODULE=ngx_formly_core.qy.forChild(FORMLY_CONFIG)},"./src/app/_services/formly/validators.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Dq:()=>fieldsDontMatchMessage,EC:()=>timeValidator,N8:()=>dateValidator,Nd:()=>faPrefixMessage,Ou:()=>dateMessage,Oy:()=>requiredIconMessage,Z5:()=>specialCharacterValidator,cC:()=>iconValidator,d:()=>hasSpecialCharactersMessage,h9:()=>requiredMessage,iR:()=>numberValidator,jp:()=>integerValidator,k1:()=>sessionAlreadyHasAuthor,kO:()=>fieldMatchValidator,lk:()=>requiredIconValidator,tu:()=>notNumberMesage,wh:()=>invalidTimeMessage,yt:()=>requiredValidator,zG:()=>notIntegerMessage});const invalidTimeMessage={name:"time",message:"Time must have 'hh:mm:ss' pattern"},requiredMessage={name:"required",message:"This field is required!"},dateMessage={name:"date",message:"This date does not follow the pattern: 'YYYY-MM-DD'. Sorry to be such a Nazi about it. The computer is forcing me."},requiredIconMessage={name:"requiredIcon",message:"This field requires a fontawesome icon as input. Here is a list of them: https://fontawesome.com/v4.7.0/icons/"},faPrefixMessage={name:"faPrefix",message:"Icons are stored without the 'fa-' from font-awesome prefix"},notIntegerMessage={name:"notInteger",message:"Your input is not an integer. This field requires an integer number. No amount of revolution can overcome this."},notNumberMesage={name:"notNumber",message:"Your input is not a number."},hasSpecialCharactersMessage={name:"hasSpecialCharacters",message:'Your input includes one of the following invalid special characters: [ ] ( ) ? | \\ " % ~ # < > :. If you need to rebel, please dont against this.'},fieldsDontMatchMessage={name:"fieldMatch",message:"Password Not Matching"},sessionAlreadyHasAuthor={name:"isInvalidSessionAuthorPair",message:"\n    The author you selected already has a diaryentry in the session you selected. You \n    can't have 2 diaryentries from the same author in the same session. Consider writing \n    your diaryentry as an encounter instead into the diaryentry at the spot you just considered."};const timeValidator={name:"time",validation:function timeValidation(control){const isValidTime=/\d\d.[0-5]\d.[0-5]\d/.test(control.value);return isValidTime?null:{time:!isValidTime}}};function requiredValidation(control){return!!control.value||0===control.value?null:{required:!0}}const requiredValidator={name:"required",validation:requiredValidation},requiredIconValidator={name:"requiredIcon",validation:requiredValidation};const dateValidator={name:"date",validation:function dateValidation(control){return/[1-2]\d{3}-(0\d|1[0-2])-[0-3]\d/.test(control.value)?null:{date:!0}}};const iconValidator={name:"faPrefix",validation:function iconValidation(control){const hasFaPrefix=/fa-/.test(control.value),hasFasPrefix=/fas-/.test(control.value),isValidIcon=hasFaPrefix||hasFasPrefix;return isValidIcon?null:{faPrefix:isValidIcon}}};const integerValidator={name:"notInteger",validation:function isIntegerValidation(control){if(null==control.value)return null;const isInteger="number"==typeof control.value&&Number.isInteger(control.value);return isInteger?null:{notInteger:!isInteger}}};const numberValidator={name:"notNumber",validation:function isNumberValidation(control){const isNumberType="number"==typeof control.value,isNumberString="string"==typeof control.value&&!isNaN(control.value),isNumber=isNumberType||isNumberString;return isNumber?null:{notNumber:!isNumber}}};const specialCharacterValidator={name:"hasSpecialCharacters",validation:function hasNoSpecialCharactersValidation(control){if("string"==typeof control.value){const specialCharacters=["[","]","(",")","|","\\",'"',"%","~","#","<",">","?","/",":"];for(const specialCharacter of specialCharacters)if(control.value.includes(specialCharacter))return{hasSpecialCharacters:!0}}return null}};const fieldMatchValidator={name:"fieldMatch",validation:function passwordMatchValidation(control){const{password,passwordConfirm}=control.value;return passwordConfirm&&password&&passwordConfirm===password?null:{fieldMatch:!0}}}},"./src/app/design/atoms/info-circle-tooltip/info-circle-tooltip.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>InfoCircleTooltipComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var info_circle_tooltip_componentngResource=__webpack_require__("./src/app/design/atoms/info-circle-tooltip/info-circle-tooltip.component.scss?ngResource"),info_circle_tooltip_componentngResource_default=__webpack_require__.n(info_circle_tooltip_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"),icon_component=__webpack_require__("./src/app/design/atoms/icon/icon.component.ts");let InfoCircleTooltipComponent=class InfoCircleTooltipComponent{constructor(){this.tooltip=core.input.required(),this.text=core.input.required(),this.placement=(0,core.input)("top"),this.tooltipKind=(0,core.computed)((()=>this.tooltip()instanceof core.TemplateRef?"custom":"text"))}static{this.propDecorators={tooltip:[{type:core.Input,args:[{isSignal:!0,alias:"tooltip",required:!0,transform:void 0}]}],text:[{type:core.Input,args:[{isSignal:!0,alias:"text",required:!0,transform:void 0}]}],placement:[{type:core.Input,args:[{isSignal:!0,alias:"placement",required:!1,transform:void 0}]}]}}};InfoCircleTooltipComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-info-circle-tooltip",template:'<strong\n  [placement]="placement()"\n  [ngbTooltip]="tooltipKind() === \'text\' ? tooltipContent : tooltip()"\n  [tooltipClass]="\'my-tooltip\'"\n  class="pointer"\n>\n  {{ text() }}\n  <app-icon class="mx-1" [icon]="\'info-circle\'"></app-icon>\n</strong>\n\n<ng-template #tooltipContent>\n  <div class="m-0 p-0">\n    {{ tooltip() }}\n  </div>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,imports:[icon_component.R,ng_bootstrap.md],styles:[info_circle_tooltip_componentngResource_default()]})],InfoCircleTooltipComponent)},"./src/app/design/molecules/formly-typeahead-field/formly-typeahead-field.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{o:()=>FormlyTypeaheadFieldComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var formly_typeahead_field_componentngResource=__webpack_require__("./src/app/design/molecules/formly-typeahead-field/formly-typeahead-field.component.scss?ngResource"),formly_typeahead_field_componentngResource_default=__webpack_require__.n(formly_typeahead_field_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"),ngx_formly_bootstrap_form_field=__webpack_require__("./node_modules/@ngx-formly/bootstrap/fesm2020/ngx-formly-bootstrap-form-field.mjs"),ngx_formly_core=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js"),ReplaySubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),rxjs_operators=__webpack_require__("./src/utils/rxjs-operators.ts"),badge_component=__webpack_require__("./src/app/design/atoms/badge/badge.component.ts");const NON_NORMAL_CHARACTER_REGEXP=/[^a-zA-Z0-9]/g,TWO_OR_MORE_WHITESPACE_REGEXP=/\s\s+/g;let FormlyTypeaheadFieldComponent=class FormlyTypeaheadFieldComponent extends ngx_formly_bootstrap_form_field.P{constructor(){super(...arguments),this.destroyRef=(0,core.inject)(core.DestroyRef),this.typeaheadElement=(0,core.viewChild)("instance",{debugName:"instance"}),this.inputElement=(0,core.viewChild)("inputElement"),this.inputElement$=(0,rxjs_interop.br)(this.inputElement).pipe((0,map.T)((input=>input?.nativeElement)),(0,rxjs_operators.u5)()),this.focus$=this.inputElement$.pipe((0,switchMap.n)((input=>(0,fromEvent.R)(input,"focus"))),(0,map.T)((event=>event.target?.value))),this.click$=this.inputElement$.pipe((0,switchMap.n)((input=>(0,fromEvent.R)(input,"click"))),(0,map.T)((event=>event.target?.value))),this.selectedItem$=new ReplaySubject.m(1),this.selectedItemLabel$=this.selectedItem$.pipe((0,map.T)((item=>item?`${item?.[this.getCustomProps().optionLabelProp]}`:null))),this.search=searchTrigger$=>{const searchTerm$=(0,merge.h)(searchTrigger$,this.focus$,this.click$).pipe((0,startWith.Z)(""),(0,map.T)((searchTerm=>this.cleanSearchTerm(searchTerm)))),customProps=this.getCustomProps(),options$=searchTerm$.pipe((0,switchMap.n)((term=>customProps.getOptions(term??""))));return(0,combineLatest.z)({searchTerm:searchTerm$,options:options$}).pipe((0,map.T)((({searchTerm,options})=>searchTerm?options.filter((opt=>this.matchesSearchterm(searchTerm,opt[customProps.optionLabelProp]))):options)))}}ngOnInit(){const customProps=this.getCustomProps(),valueProp=customProps.optionValueProp;this.inputElement$.pipe((0,take.s)(1),(0,rxjs_interop.pQ)(this.destroyRef),(0,rxjs_operators.u5)()).subscribe((inputElement=>{customProps.initialValue&&(inputElement.value=customProps.initialValue)})),this.selectedItem$.pipe((0,rxjs_interop.pQ)(this.destroyRef),(0,map.T)((item=>item?.[valueProp])),(0,tap.M)((val=>console.log("SelectedItem: ",val)))).subscribe((item=>this.formControl.setValue(item)))}resetSelectedValue(){this.selectedItem$.next(null)}resetValueAndText(){this.resetSelectedValue(),this.typeaheadElement()?.writeValue("")}onSelect(event){event.item?this.selectedItem$.next(event.item):event.preventDefault()}clearOnEmptyInput(target){const inputText=target?.value;inputText||this.resetSelectedValue()}formatItem(item){return item[this.getCustomProps().optionLabelProp]}matchesSearchterm(searchTerm,optionLabel){switch(typeof optionLabel){case"string":case"number":case"bigint":case"boolean":return`${optionLabel}`.toLowerCase().includes(searchTerm.toLowerCase());case"symbol":return optionLabel.description?.toLowerCase().includes(searchTerm.toLowerCase());default:return!1}}getCustomProps(){return this.props.additionalProperties}cleanSearchTerm(searchTerm){return searchTerm?.replaceAll(NON_NORMAL_CHARACTER_REGEXP," ").trim().replace(TWO_OR_MORE_WHITESPACE_REGEXP," ").trim()}static{this.propDecorators={typeaheadElement:[{type:core.ViewChild,args:["instance",{debugName:"instance",isSignal:!0}]}],inputElement:[{type:core.ViewChild,args:["inputElement",{isSignal:!0}]}]}}};FormlyTypeaheadFieldComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-formly-typeahead-field",imports:[fesm2022_forms.X1,ngx_formly_core.qy,ng_bootstrap.h_,common.AsyncPipe,badge_component.n],template:'@let selectedItemLabel = selectedItemLabel$ | async;\n<div class="form-control">\n  @if (selectedItemLabel) {\n    <app-badge\n      class="form-control__selected-value-badge"\n      [kind]="\'SECONDARY\'"\n      [text]="selectedItemLabel"\n      [title]="\'Clear this option\'"\n      [icon]="\'times\'"\n      [clickable]="true"\n      [maxLength]="20"\n      (badgeClick)="resetSelectedValue()"\n      (click)="$event.stopPropagation()"\n    />\n  }\n\n  <input\n    #inputElement\n    #instance="ngbTypeahead"\n    id="typeahead-focus"\n    type="text"\n    class="form-control__input"\n    [ngbTypeahead]="search"\n    [disabled]="props.disabled ?? false"\n    [formlyAttributes]="field"\n    [placeholder]="props.placeholder"\n    [resultFormatter]="formatItem.bind(this)"\n    [inputFormatter]="formatItem.bind(this)"\n    [attr.aria-invalid]="showError"\n    [editable]="false"\n    (blur)="formControl.markAsTouched()"\n    (selectItem)="onSelect($event)"\n    (keydown.Backspace)="clearOnEmptyInput($event.target)"\n    (keydown.Escape)="resetValueAndText()"\n  />\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[formly_typeahead_field_componentngResource_default()]})],FormlyTypeaheadFieldComponent)},"./src/app/design/organisms/formly-datepicker-field/formly-datepicker-field.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{FE:()=>FormlyDatepickerFieldComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var formly_datepicker_field_componentngResource=__webpack_require__("./src/app/design/organisms/formly-datepicker-field/formly-datepicker-field.component.scss?ngResource"),formly_datepicker_field_componentngResource_default=__webpack_require__.n(formly_datepicker_field_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"),ngx_formly_core=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),button_component=__webpack_require__("./src/app/design/atoms/button/button.component.ts"),icon_component=__webpack_require__("./src/app/design/atoms/icon/icon.component.ts");let CustomAdapter=class CustomAdapter extends ng_bootstrap.dn{constructor(){super(...arguments),this.DELIMITER="-"}fromModel(value){if(value){let date=value.split(this.DELIMITER);return{day:parseInt(date[2],10),month:parseInt(date[1],10),year:parseInt(date[0],10)}}return null}toModel(date){if(null==date)return"";const dayString=`${date.day}`.padStart(2,"0"),monthString=`${date.month}`.padStart(2,"0");return`${`${date.year}`.padStart(4,"0")}${this.DELIMITER}${monthString}${this.DELIMITER}${dayString}`}};CustomAdapter=(0,tslib_es6.Cg)([(0,core.Injectable)()],CustomAdapter);let CustomDateParserFormatter=class CustomDateParserFormatter extends ng_bootstrap.tN{constructor(){super(...arguments),this.DELIMITER="/"}parse(value){if(null==value)return null;let date=value.split(this.DELIMITER);return{day:parseInt(date[2],10),month:parseInt(date[1],10),year:parseInt(date[0],10)}}format(date){if(null==date)return"";const dayString=`${date.day}`.padStart(2,"0"),monthString=`${date.month}`.padStart(2,"0");return`${`${date.year}`.padStart(4,"0")}${this.DELIMITER}${monthString}${this.DELIMITER}${dayString}`}};CustomDateParserFormatter=(0,tslib_es6.Cg)([(0,core.Injectable)()],CustomDateParserFormatter);let FormlyDatepickerFieldComponent=class FormlyDatepickerFieldComponent extends ngx_formly_core.PU{constructor(ngbCalendar,dateAdapter){super(),this.ngbCalendar=ngbCalendar,this.dateAdapter=dateAdapter}get today(){return this.dateAdapter.toModel(this.ngbCalendar.getToday())}static{this.ctorParameters=()=>[{type:ng_bootstrap.iF},{type:ng_bootstrap.dn}]}};FormlyDatepickerFieldComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-formly-datepicker",template:'<div class="mb-3 {{ field.className }}" [class.d-none]="to.hidden">\n  <label [for]="to[\'name\']" class="form-label">\n    <strong>\n      {{ to.label }}\n      @if (to.required) {\n        *\n      }\n    </strong>\n  </label>\n\n  <div class="input-group" [class.disabled]="!!props.disabled">\n    <input\n      class="form-control"\n      [required]="!!to.required"\n      placeholder="yyyy/mm/dd"\n      [name]="to[\'name\']"\n      maxLength="10"\n      minlength="10"\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n      ngbDatepicker\n      #datepickerInput="ngbDatepicker"\n    />\n    <button\n      btn\n      class="btn btn-outline-light highlight"\n      [kind]="\'SECONDARY\'"\n      [icon]="\'calendar\'"\n      [class.disabled]="!!props.disabled"\n      (click)="datepickerInput.toggle()"\n    >\n      <app-icon [icon]="\'calendar\'"></app-icon>\n    </button>\n  </div>\n</div>\n\n<ng-template #customDay let-date>\n  <button\n    btn\n    class="datepicker-day"\n    [kind]="\'LIGHT\'"\n    [disabled]="!!props.disabled"\n    [text]="date.day"\n  ></button>\n</ng-template>\n',providers:[{provide:ng_bootstrap.dn,useClass:CustomAdapter},{provide:ng_bootstrap.tN,useClass:CustomDateParserFormatter}],imports:[fesm2022_forms.X1,button_component.Q,ngx_formly_core.qy,ng_bootstrap.IQ,icon_component.R],styles:[formly_datepicker_field_componentngResource_default()]})],FormlyDatepickerFieldComponent)},"./src/app/design/organisms/formly-editor-field/formly-editor-field.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S:()=>FormlyEditorFieldComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var formly_editor_field_componentngResource=__webpack_require__("./src/app/design/organisms/formly-editor-field/formly-editor-field.component.scss?ngResource"),formly_editor_field_componentngResource_default=__webpack_require__.n(formly_editor_field_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ngx_formly_core=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),tinymce_tinymce_angular=__webpack_require__("./node_modules/@tinymce/tinymce-angular/fesm2020/tinymce-tinymce-angular.mjs"),formly_editor_field_constants=__webpack_require__("./src/app/design/organisms/formly-editor-field/formly-editor-field.constants.ts");let FormlyEditorFieldComponent=class FormlyEditorFieldComponent extends ngx_formly_core.PU{constructor(){super(...arguments),this.settings=formly_editor_field_constants.O}};FormlyEditorFieldComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-formly-editor-field",template:'<div class="mb-3 {{ field.className }}" [class.d-none]="to.hidden">\n  <label class="form-label" [for]="to[\'name\']">\n    {{ to.label }}\n\n    @if (to.required) {\n      *\n    }\n  </label>\n\n  <editor\n    [attr.name]="to[\'name\']"\n    #textEditorElement\n    [formControl]="formControl"\n    [formlyAttributes]="field"\n    [init]="settings"\n  ></editor>\n</div>\n',imports:[tinymce_tinymce_angular.sv,fesm2022_forms.X1,ngx_formly_core.qy],styles:[formly_editor_field_componentngResource_default()]})],FormlyEditorFieldComponent)},"./src/app/design/organisms/formly-editor-field/formly-editor-field.constants.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{O:()=>TINYMCE_SETTINGS});const TINYMCE_SETTINGS={plugins:["advlist","autolink","lists","link","image","charmap","anchor","searchreplace","visualblocks","media","table","help","wordcount"],toolbar:["undo redo | formatselect | bold italic underline strikethrough subscript superscript link unlink blockquote | backcolor forecolor hilitecolor fontsizeselect |","alignleft aligncenter alignright | bullist numlist outdent indent | removeformat | table help"],skin:"oxide-dark",content_css:"dark",browser_spellcheck:!0,menubar:!1,height:500,convert_urls:!1,relative_urls:!1,branding:!1,base_url:"/tinymce",suffix:".min"}},"./src/app/design/organisms/formly-select-disable/formly-select-disable-field.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{D:()=>FormlySelectDisableFieldComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var formly_select_disable_field_componentngResource=__webpack_require__("./src/app/design/organisms/formly-select-disable/formly-select-disable-field.component.scss?ngResource"),formly_select_disable_field_componentngResource_default=__webpack_require__.n(formly_select_disable_field_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ngx_formly_bootstrap_form_field=__webpack_require__("./node_modules/@ngx-formly/bootstrap/fesm2020/ngx-formly-bootstrap-form-field.mjs"),ngx_formly_core=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),info_circle_tooltip_component=__webpack_require__("./src/app/design/atoms/info-circle-tooltip/info-circle-tooltip.component.ts");let FormlySelectDisableFieldComponent=class FormlySelectDisableFieldComponent extends ngx_formly_bootstrap_form_field.P{static{this.EMPTY_OPTION_LABEL="------"}static{this.EMPTY_OPTION_VALUE=null}ngOnInit(){const templateOptions=this.props,formControl=this.formControl,model=this.model,options$=this.props.options;if(!(options$ instanceof Observable.c))throw"InvalidSelectOptionsException. You tried to create a FormlySelectDisableComponent - field, but provided an option that wasn't an Observable!";const isOptionDisabled$=(0,this.props.additionalProperties.disabledExpression)(options$,templateOptions,formControl,model);this.selectOptions$=(0,combineLatest.z)({options:options$,isDisabledList:isOptionDisabled$}).pipe((0,map.T)((({options,isDisabledList})=>options.map(((opt,index)=>({value:opt,enabled:!isDisabledList[index]})))))),this.setModelValue()}ngOnChanges(){this.setModelValue()}setModelValue(){const key=this.key,model=this.field.model;this.modelValue=model[key]}};FormlySelectDisableFieldComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-formly-select-disable",template:'<div class="field mb-3 {{ field.className }}" [class.d-none]="to.hidden">\n  <label class="form-label" [for]="\'formly_disable_select_\' + props.label">\n    <app-info-circle-tooltip\n      [text]="props.label + (props.required ? \'*\' : \'\')"\n      [tooltip]="props[\'additionalProperties\'][\'tooltipMessage\']"\n    ></app-info-circle-tooltip>\n  </label>\n\n  @let selectOptions = selectOptions$ | async;\n  @if (selectOptions) {\n    <select\n      class="form-select"\n      [name]="\'formly_disable_select_\' + props.label"\n      [id]="\'formly_disable_select_\' + props.label"\n      [required]="!!props.required"\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n    >\n      @for (entry of selectOptions; track entry) {\n        <option\n          [ngValue]="entry.value[props[\'valueProp\']]"\n          [disabled]="!entry.enabled"\n          [selected]="entry.value[props[\'valueProp\']] === modelValue"\n        >\n          {{ entry.value[props["labelProp"]] }}\n        </option>\n      }\n    </select>\n  }\n</div>\n',imports:[info_circle_tooltip_component.$,fesm2022_forms.X1,ngx_formly_core.qy,common.AsyncPipe],styles:[formly_select_disable_field_componentngResource_default()]})],FormlySelectDisableFieldComponent)},"./src/environments/environment.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{c:()=>environment});const environment={kind:"DEVELOPMENT",backendDomain:"https://www.aldrune.com",apiUrl:"/wiki1/api",defaultTitle:"StoryFont",frontendPrefix:"wiki2"}},"./src/utils/rxjs-operators.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{cY:()=>debugLog,fC:()=>delayFalsy,u5:()=>filterNil});var rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),rxjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/pipe.js"),rxjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),rxjs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),rxjs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js"),src_environments_environment__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/environments/environment.ts"),_logging__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/logging.ts");function filterNil(){return(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.p)((x=>null!=x))}const debugLog=debugSymbol=>{const isDevelop="DEVELOPMENT"===src_environments_environment__WEBPACK_IMPORTED_MODULE_0__.c.kind;return(0,rxjs__WEBPACK_IMPORTED_MODULE_2__.M)((x=>{isDevelop&&(0,_logging__WEBPACK_IMPORTED_MODULE_3__.R)(debugSymbol,x)}))};function delayFalsy(delayByMs=1e3){return(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.F)((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.n)((x=>(0,rxjs__WEBPACK_IMPORTED_MODULE_6__.of)(x).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.c)(x?0:delayByMs)))))}},"./src/app/design/atoms/info-circle-tooltip/info-circle-tooltip.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/design/molecules/formly-autocomplete-field/formly-autocomplete-field.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".field__input {\n  display: flex;\n  flex-direction: row;\n  background-color: #4c4c4c;\n  border-radius: var(--bs-border-radius);\n  align-items: center;\n  flex-wrap: wrap;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  border: 1px solid #222;\n  line-height: 1.5;\n  font-weight: bold;\n  font-size: 0.9375rem;\n  padding: 0.375rem 0rem 0.375rem 0.75rem;\n}\n.field__input:focus, .field__input:focus-within {\n  border: #a1abb5;\n  outline: 0 solid;\n  box-shadow: 0 0 0 0.25rem rgba(66, 86, 106, 0.25);\n}\n.field__is-invalid {\n  padding-right: calc(1.5em + 0.75rem);\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23bf4044'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23bf4044' stroke='none'/%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right calc(0.375em + 0.1875rem) center;\n  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\n}\n.field__autocomplete {\n  background-color: unset;\n  border: none;\n  flex: 1;\n  color: inherit;\n  min-width: 55%;\n}\n.field__autocomplete:focus-visible {\n  outline: none;\n}\n.field__spinner {\n  height: 1rem;\n  width: 1rem;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/design/molecules/formly-typeahead-field/formly-typeahead-field.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".form-control {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: var(--spacer-2);\n  --bs-body-bg: var(--bs-secondary);\n  border-color: var(--bs-white);\n}\n.form-control__input {\n  width: 100%;\n  background-color: unset;\n  border: unset;\n  outline: unset;\n  color: var(--bs-body-color);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/design/organisms/formly-datepicker-field/formly-datepicker-field.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".input-group {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  width: 100%;\n}\n\n.disabled {\n  cursor: not-allowed;\n}\n\n.btn-outline-light {\n  border-color: var(--bs-white);\n  color: var(--bs-white);\n  display: flex;\n  align-items: center;\n  height: unset;\n}\n\ndiv.datepicker-day {\n  background-color: var(--wiki-bg-solid);\n  color: var(--bs-white);\n  text-align: center;\n  transition: background-color 0.2s ease-in-out;\n  transition: color 0.2s ease-in-out;\n}\ndiv.datepicker-day:hover {\n  color: var(--bs-black);\n  background-color: grey;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/design/organisms/formly-editor-field/formly-editor-field.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/design/organisms/formly-select-disable/formly-select-disable-field.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".warning {\n  color: var(--lightest-red);\n  font-size: 80%;\n}\n\napp-spinner {\n  --thickness: 30px;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);